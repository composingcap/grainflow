<?xml version='1.0' encoding='utf-8' standalone='yes'?>
<?xml-stylesheet href="./c74ref.xsl" type="text/xsl"?>

<c74object name='grainflow.streams~' module="msp" category="grainflow, MSP Proccessing">

	<digest>Create multiple streams of grains without channel loss</digest>
	<description>
		Control streams of grains without the loss of channels!  grainflow.stream is a shortcut to allow users to easily interface with multiple instances of grainflow with each grain being output as its own channel. A signals vecotr of delay will be added due to the use of sends and receives in a poly~.
	</description>


	<!--METADATA-->

	<metadatalist>
		<metadata name='author'>Christopher Poovey</metadata>
		<metadata name='tag'>Grainflow</metadata>
		<metadata name='tag'>Granulation</metadata>
		<metadata name='tag'>MSP</metadata>

	</metadatalist>
<!--INLETS-->
	<inletlist>
		<inlet id="0" type="multichannelsignal">
			<digest>
			Multichannelsignal will act as the grainulators clock for each stream.
			</digest>
			<description>
				Signal and Multichannelsignal will act as the grainulators clock.  Grains will be scheduled based on this clock in accordance to the windowOffset and space paramters. windowOffset tells the granulator how much each voice should offset as a percentage of the phasor size.  If there are two grains and the windowOffset is 0.5 then one grain will start when hte pohasor is 0 and the other will start when the phasor reaches 0.5. Space determined the size of the grain in relation to the phasor.  If space is 0 the grain will take up the entire length of the phasor.  If it is 0.5 it will take up half of the length.
			</description>
		</inlet>

		<inlet id="1" type="multichannelsignal">
			<digest>
				Grain traversal as a multichannelsignal- each channel is for a stream
			</digest>
			<description>
				The position of each grain in the buffer from 0-1. Messages may apply modifications to this.
			</description>
		</inlet>
		<inlet id="2" type="multichannelsignal">
			<digest>
				Frequency Modulation
			</digest>
			<description>
				Will modulate the grain rate with a signal or multichannelsignal
			</description>
		</inlet>
		<inlet id="3" type="multichannelsignal">
			<digest>
				Amplitude Modulation
			</digest>
			<description>
				Will modulate the amplitude with a signal or multichannelsignal
			</description>
		</inlet>
	</inletlist>

	<!--OUTLETS-->
	<outletlist>
		<outlet id="0" type="multichannelsignal">
			<digest>
			Grains each as their own channel.
			</digest>
			<description>
			</description>
		</outlet>
		<outlet id="1" type="list">
			<digest>
			Grain information organized by stream number
			</digest>
			<description>
				Can be routed by the following:
				grainState - 1 if the grain is active 0 if it is in "space"
				grainProgress - the progress of a grain from 0 - 1
				grainPosition - the position of the grain withing the buffer from 0 - 1
				grainAmp - the amplitude of the grain from 0 - 1
				grainWindow - the amplitude of the grain window (envelope) from 0 - 1
				buffername - the name of the primary buffer being granulated from (it is possible to assign different buffers to different grains)
			</description>
		</outlet>
	</outletlist>

	<!--ARGUMENTS-->

	<objarglist>
		<objarg name="streams" optional="0" type="int">
			<digest>The number of streams created</digest>
		</objarg>
		<objarg name="grains-per-stream" optional="0" type="int">
			<digest>The number of grains in each stream</digest>
		</objarg>
<objarg name="buffer-name" optional="0" type="symbol">
	<digest>The name of the buffer the granulate</digest>
</objarg>

	</objarglist>


	<!--MESSAGES-->

	<methodlist>

<method name='stream' type="list" size="1">
	<digest>Each message is assigned to a stream in the format stream number message-name message-values</digest>
</method>
<method name='deviate' type="list" size="1">
	<digest>The deviate message will deviate any grainflow parameter from a center point similar to mc deviate</digest>
</method>
<method name='---grainflow-messages---' type="list" size="1">
	<digest>All grainflow messages can be used</digest>
</method>
		<method name='int' type="int" size="1">
			<digest>Sets the state of the granulator</digest>
			<description>Sets the state of the granulator 1 is on 0 is off</description>
		</method>

		<method name='state' type="int" size="2">
			<digest>Sets the state of the granulator</digest>
			<description>Sets the state of the granulator 1 is on 0 is off</description>
		</method>

		<method name='ngrains' type="int" size="1">
			<digest>Sets the number of active grains. This may not exceed the maxiumum graincount</digest>
			<description></description>
		</method>

		<method name='voices' type="int" size="1">
			<digest>Sets the maximum number of grains</digest>
			<description></description>
		</method>

		<method name='grain' type="list" size="1">
			<digest>followed by an integer and a message- send this message to a specific grain</digest>
			<description></description>
		</method>

		<method name='env' type="string" size="1">
			<digest>Sets the grain envelope to a named buffer</digest>
			<description></description>
		</method>

		<method name='buf' type="string" size="1">
			<digest>Sets the granulation buffer</digest>
			<description></description>
		</method>

		<method name='amp' size="1">
			<digest>Grain Volume from 0 - 1</digest>
			<description></description>
		</method>

		<method name='ampRandom' size="1">
			<digest>Ranbdom Grain Volume from 0 - 1 - only attinuates</digest>
			<description></description>
		</method>

		<method name='windowOffset' size="1">
			<digest>The offset position of each subiquent grain on the grain phasor from 0 - 1</digest>
			<description></description>
		</method>

		<method name='windowOffsetRandom' size="1">
			<digest>Randomness applied to the offset position of each subiquent grain on the grain phasor</digest>
			<description></description>
		</method>

		<method name='space' size="1">
			<digest>Sets the amount of empty space per grain on the phasor</digest>
			<description>If this is 0, there each grain will take the entire phasor to complete.  If it is 0.5, the grain will occur for half of the phasor length</description>
		</method>

		<method name='spaceRandom' size="1">
			<digest>Randomness applied to space</digest>
		</method>

		<method name='travOffset' size="1">
			<digest>Traversal offset per grain in ms</digest>
			<description></description>
		</method>

		<method name='travRandom' size="1">
			<digest>Random traversal in ms</digest>
			<description></description>
		</method>
		<method name='travGlobalOffset' size="1">
			<digest>
				A global offset to the traversal in ms
			</digest>
		</method>
		<method name='rate' size="1">
			<digest>The playback rate of the samples within each grain. Will cause a pitch shift</digest>
			<description></description>
		</method>

		<method name='rateRandom' size="1">
			<digest>Random playback rate of the samples within each grain.</digest>
			<description></description>
		</method>

		<method name='direction' size="1">
			<digest>The probablistic dirrection of each grain 1 is always forward -1 is always backward</digest>
			<description></description>
		</method>

		<method name='rateOffset' size="1">
			<digest>The playback rate of the samples within each grain per each subsiquent grain/</digest>
			<description></description>
		</method>

		<method name='glisson' size="1">
			<digest>A glissandom from the initial rate to n+ the initial rate over the duration of the grain</digest>
			<description></description>
		</method>

		<method name='glissonRandom' size="1">
			<digest>Randomness applied to glisson in rate</digest>
			<description></description>
		</method>

		<method name='rateQuantizeSemi' size="1">
			<digest>Will quanize rates to semitones</digest>
			<description></description>
		</method>

		<method name='travMode' size="1">
			<digest>Will set the traversal mode to one of the following
				0: Traversal by messages (default)
				1: Tranversal from buffer read by voices
				2: Traversal from buffer read randomly per grain
			</digest>
			<description>
				This is useful when needing to dial in very specic traversals to design sounds.  The buffer can be set using the travOffsets message
			</description>
		</method>

		<method name='travOffsets' size="1">
			<digest>
				Sets the traversal buffers for travMode 1 and 2
			</digest>
		</method>

		<method name='rateMode' size="1">
			<digest>Will set the rate mode to one of the following
				0: Rate by messages (default)
				1: Rate from buffer read by voices
				2: Rate from buffer read randomly per grain
			</digest>
			<description>
				This is useful when needing to dial in very specic rates to design sounds.  The buffer can be set using the travOffsets message
			</description>
		</method>

		<method name='rates' size="1">
			<digest>
				Sets the rate buffers for rateMode 1 and 2
			</digest>
		</method>



		<method name='envMode' size="1">
			<digest>
				Sets how envelopes are read to one of the following:
				0: reads from a buffer containing 1 envelope (default)
				1: Reads an envelope from buffer organized as a 2D wavetable read by voices
				2 : does not exist but should be random like the others
			</digest>
		</method>

		<method name='env2D' size="1">
			<digest>
				A buffer containing a 2D envelope wavetable for envMode 1
			</digest>
		</method>

		<method name='env2DNumber' size="1">
			<digest>
				The number of envelopes in the 2D wavetable
			</digest>
		</method>

	<method name='env2DPosition' size="1">
		<digest>
			The overall position in the 2Denv buffer
		</digest>
	</method>


<method name='env2DRandom' size="1">
	<digest>
		The randomness applied to the position the 2Denv buffer
	</digest>
</method>

<method name='windowOffsetMode' size="1">
	<digest>
		Will set the rate mode to one of the following
			0: windowOffset by messages (default)
			1: windowOffset from buffer read by voices
			2: windowOffset from buffer read randomly per grain
	</digest>
</method>

	<method name='windowReadBias' size="1">
		<digest>
			Will read the grain window so a polynomial. This is expensive and should be avoided if unneccisary.
		</digest>
</method>



	</methodlist>


	<!--ATTRIBUTES-->

	<attributelist>
		<attribute name='any-message' get='0' set='1' type='anything' size='1' >
				 <digest>Any message can be set on instantiation as an attribute</digest>
		 </attribute>
	</attributelist>


	<!--RELATED-->

	<seealsolist>
		<seealso name='grainflow~' />
		<seealso name='grainflow.streams~' />
		<seealso name='grainflow.record~' />
		<seealso name='grainflow.grainRecord~' />
		<seealso name='grainflow.waveform~' />
	</seealsolist>


</c74object>
